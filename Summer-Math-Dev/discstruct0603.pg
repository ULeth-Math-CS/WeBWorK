## DESCRIPTION
##
## ENDDESCRIPTION


## DBsubject(Discrete Math)
## DBchapter(06- Rosen Book)
## DBsection(6.3)
## Date(2018-06-16)
## Institution(University of Lethbridge)
## Author(Mainul Polash & Nicole Wilson)
## KEYWORDS('ULETH-CPSC1820','Permutation', 'Combination')

#################################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  # Used to provide contextual help for how to type answers.
  "AnswerFormatHelp.pl",
  # Provides greater control over the layout of the problem.
  "PGML.pl",
  # Used for course-specific initializations.
  "PGcourse.pl",
);

TEXT(beginproblem());


#################################
#  Setup

#-ULETH-#
$totalBitsA=random(1,12,1);
$totalBitsB=random(1,12,1);
$totalBitsC=random(1,12,1);
$mostnumber=random(1,$totalBitsA,1);
$leastnumber=random(1,$totalBitsB,1);
$exactnumber=random(1,$totalBitsC,1);
##Calculation for question a
$answerA=0;
for ($i=0;$i<=$mostnumber;$i++)
{
$answerA=$answerA + C($totalBitsA,$i);
}
##Calculation for question b
$answerB=0;
for ($i=$leastnumber;$i<=$totalBitsB;$i++)
{
$answerB=$answerB + C($totalBitsB,$i);
}
##Calculation for question c
$blankspace= ($totalBitsC - $exactnumber)+1;
$answerC=C($blankspace,$exactnumber);

#-ENDULETH-#


#####################################
#  Main text

#-ULETH-#
# Initializes the problem text and answer formatting help.
BEGIN_PGML
An 8-bit string is an 8 digit binary number.

a. How many [$totalBitsA]-bit strings contain at most [$mostnumber] zeros? [_______]{$answerA}[@ AnswerFormatHelp("numbers") @]*

b. How many [$totalBitsB]-bit strings contain at least [$leastnumber] ones? [_______]{$answerB}[@ AnswerFormatHelp("numbers") @]*

c. How many [$totalBitsC]-bit strings contain exactly [$exactnumber] ones that are NOT adjacent to each other? [_______]{$answerC}[@ AnswerFormatHelp("numbers") @]*
END_PGML
#-ENDULETH-#


############################
#  Answer Evaluation

#-ULETH-#
# Setting this to 1 means that students will receive feedback on whether their
# answers are correct.
$showPartialCorrectAnswers = 1;

# If you add additional questions, make sure you add answer checkers for them here!

#-ENDULETH-#


############################
#  Solution

#-ULETH-#
# Solution text to show after the due date.
BEGIN_PGML_SOLUTION
a.   For example, 8-bit strings contain at most 3 zeros.

Strings with no zeros or one zero or two zeros or three zeros.

    [`\left(
        \begin{array}{c}
          8\\
          0
        \end{array}
      \right)
      +
      \left(
        \begin{array}{c}
          8\\
          1
        \end{array}
      \right)
      +
      \left(
        \begin{array}{c}
          8\\
          2
        \end{array}
      \right)
      +
      \left(
        \begin{array}{c}
          8\\
          3
        \end{array}
      \right)
      = 93.
      `]
      

b.   For example, 8-bit strings contain at least 6 ones.

    [` \left(
        \begin{array}{c}
          8\\
          6
        \end{array}
      \right)
      +
      \left(
        \begin{array}{c}
          8\\
          7
        \end{array}
      \right)
      +
      \left(
        \begin{array}{c}
          8\\
          8
        \end{array}
      \right)
      = 37.
      `]

c.  For example, 8-bit strings contain exactly two ones that are NOT adjacent to each other.

Write down the 6 zeroes, with some space between them, like this:

   0  0   0   0   0   0

There are 7 "gaps" determined by these 0's (5 real gaps, plus just before the first 0, and just after the last one).

We need to choose 2 of these gaps to put a 1 into. By definition, there are 
[`\left ( 
    \begin{array}{c}
        7\\
        2
       \end {array}
      \right)
      `]
ways to do this.
    
END_PGML_SOLUTION

    COMMENT('
    Randomization provides different possible versions of this question.<BR>
    This question has 3 parts. <BR>
    Includes a solution set.<BR>
    Made from a ULETH template.<BR>
    '); 
#-ENDULETH-#

ENDDOCUMENT();

