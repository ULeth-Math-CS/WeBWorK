## DBsubject()
## DBchapter()
## DBsection()
## Date(2017-08-17)
## Institution(University of Lethbridge)
## Author(Olivia Henders & Nicole Wilson)
## MO(1)
## KEYWORDS('eigenvalues', 'vectors', 'matrices and vectors', 'eigenvectors')


###########################
#  Initialization

# The first line in the .pg file after any opening comments.
# Defines the bounds of the document.
DOCUMENT();

# Contains a comma-separated list of macro filename strings.
# Each file contains functionality necessary for the mathematical
# functions being used in the problem.
loadMacros(
  # REQUIRED: Used for basic question and answer operations.
  "PGstandard.pl",
  # REQUIRED: Used for expression parsing.
  "MathObjects.pl",
  # Required for proper text formatting.
  "PGML.pl",
  # Used to provide contextual help for how to type answers.
  "AnswerFormatHelp.pl",
);

# Sets up basic problem information.
TEXT(beginproblem());


#############################
#   Setup

#-ULETH-#
# Values used to build the Matrix.
$a = non_zero_random(-2,3,1);
$b = non_zero_random(-3,2,1);
$c = non_zero_random(-2,3,1);
$d = non_zero_random(-3,3,1);
# Matrix construction.
Context("Matrix");
$M = Compute("[[$a,$a+$b,0],[2*$a,0,$c],[0,$b,$d]]");

# Recompute the Matrix until its determinant is not equal to 0.
while ($M->det == 0)
{
  $a = non_zero_random(-5,5,1);
  $b = non_zero_random(-5,5,1);
  $c = non_zero_random(-5,5,1);
  $d = non_zero_random(-5,5,1);
  $M = Compute("[[$a,$a+$b,0],[2*$a,0,$c],[0,$b,$d]]");
}

# Lambda values
$lambda1 = non_zero_random(-3,3,1);
$lambda2 = non_zero_random(-4,4,1);
$lambda3 = random(-6,6,2);
# Lambda Matrix
$Diagonal = Compute("[[$lambda1,0,0],[0,$lambda2,0],[0,0,$lambda3]]");

$A = $M*$Diagonal*($M->inverse);
# Identity Matrix
$I = Value::Matrix->I(3);

# Adds lambda to the Context.
Context()->variables->add(lambda=>Real);
# Answer values
$traceA = $A->trace;
$detA = $A->det;
$elementSystem = 0;
for (my $i = 1; $i <= 3; $i++)
{
  for (my $j = $i+1; $j <= 3; $j++)
  {
    $elementSystem += ($A->element($i,$j)*$A->element($j,$i)) - ($A->element($i,$i)*$A->element($j,$j));
  }
}
# Compute answer values.
$charPolynomial = Formula("-lambda^3 + $traceA*lambda^2 + $elementSystem*lambda + $detA")->reduce;


#############################
#   Problem Text

#-ULETH-#
BEGIN_PGML

Let [`A = [$A]`].
Find the characteristic polynomial, eigenvalues, and eigenvectors for [`A`].

[`p(\lambda) = `][_________________________________________________________________________][@ AnswerFormatHelp("equations") @]*

END_PGML
#-ENDULETH-#


#############################
#   Answer Evaluation

ANS($charPolynomial->cmp());


#############################
#   Solution

#-ULETH-#
# Intermediate values used for displaying the solution.
@aArray = ();
for (my $i = 1; $i <= 3; $i++)
{
  for (my $j = 1; $j <= 3; $j++)
  {
    $aArray[$i-1][$j-1] = $A->element($i,$j);
  }
}

Context()->flags->set(reduceConstants=>0, reduceConstantFunctions=>0);
$det3x3Expanded = Formula("($aArray[0][0]-lambda)[($aArray[1][1]-lambda)($aArray[2][2]-lambda) - ($aArray[1][2])($aArray[2][1])]
                            - ($aArray[0][1])[($aArray[1][0])($aArray[2][2]-lambda) - ($aArray[1][2])($aArray[2][0])]
                            + ($aArray[0][2])[($aArray[1][0])($aArray[2][1]) - ($aArray[1][1]-lambda)($aArray[2][0])]");
# Convert the Formula to LaTeX, then do a find/replace to swap out the lambda
# variable with the LaTeX syntax for a lambda symbol.
$det3x3ExpandedLaTeX = $det3x3Expanded->TeX;
$det3x3ExpandedLaTeX =~ s/lambda/\lambda/g;

$det3x3ExpandedReduced = $det3x3Expanded->reduce;

$det3x3ExpandedReducedLaTeX = $det3x3ExpandedReduced->TeX;
$det3x3ExpandedReducedLaTeX =~ s/lambda/\lambda/g;

# Can be used to show the student the solution to the problem.

# Similar to BEGIN_PGML, marks the start of the solution text.
BEGIN_PGML_SOLUTION

The characteristic polynomial of [`A`] is given (up to a sign) by
[`\begin{align*}
p(\lambda) &= \det(A - \lambda I) = \det\left([$A] - \lambda[$I]\right)\\
&= \det\left(
  \left[
    \begin{array}{ccc}
      [$A->element(1,1)] - \lambda & [$A->element(1,2)] & [$A->element(1,3)] \\
      [$A->element(2,1)] & [$A->element(2,2)] - \lambda & [$A->element(2,3)] \\
      [$A->element(3,1)] & [$A->element(3,2)] & [$A->element(3,3)] - \lambda
    \end{array}
  \right]
\right)\\
&= [$det3x3ExpandedLaTeX]\\
&= [$det3x3ExpandedReducedLaTeX].\end{align*}`]
END_PGML_SOLUTION
#-ENDULETH-#

# Marks the end of the problem document.
ENDDOCUMENT();
