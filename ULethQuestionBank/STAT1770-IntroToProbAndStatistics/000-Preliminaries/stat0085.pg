## DESCRIPTION
#  This is a question that shows a GeoGebra graph with a dotplot for two distributions (of football durations). The student is asked to report what proportion of games from the first group took longer than some duration, where this duration ranges from 180 minutes to 220 in increments of 10 minutes (all the durations range from 165-240 minutes). Then the student is asked which group the longest duration game belongs to. Each distribution has 28 randomly generated durations (data) that are generated in segments to preserve a similar overall spread. The proportion questions have tolerance set to 0.001 and the question reflects this fact by asking the student to report their decimal anwsers to 3 places. 
## ENDDESCRIPTION

## DBsubject('Statistics')
## DBchapter('Experimental Design')
## DBsection('Concepts')
## Date(2017-05-11)
## Institution(University of Lethbridge)
## Author(Kyler Fisher, Adopted from template by Olivia Henders & Nicole Wilson)
## MO(1)
## KEYWORDS('multiple choice', 'ULETH-STAT1770', 'dot plot', 'dot-plot', 'proportion', 'maximum')


###########################
#  Initialization

DOCUMENT();
loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  # Used to support the GeoGebra applet.
  "AppletObjects.pl",
  # Formats problem data into two layout columns.
  "unionTables.pl",
  # Provides course-specific initializations.
  "PGcourse.pl",
  "PGML.pl",
  # Used for drop down responses.
  "parserPopUp.pl",
  # context limited point
  "contextLimitedPoint.pl",
  # for anwser help
  "AnswerFormatHelp.pl",
);

TEXT(beginproblem());


##########################################
#  Setup

#-ULETH-#

#####Create data for the regular refs
do{
@regular;
#add points for lower section 
for ($i = 0; $i < 15; $i++){
    $regular[$i] = random(166,186,2);
}
#add points for mid section 
@regular;
for ($i = 15; $i < 25; $i++){
    $regular[$i] = random(185,218,2);
}
#add points for upper section 
@regular;
for ($i = 25; $i < 28; $i++){
    $regular[$i] = random(220,224,2);
}
$regularString = "{".join(",", @regular)."}";

#check if any columns have more than 6 scores (would not not fit inside the plot boundaries drawn)
$tooMany = 0;
for ($i = 165; $i < 219; $i++) { # for each number 165-218
    $count = 0;
    for ($j = 0; $j < 28; $j++) { # count how many times it appears, if count is more than 6, tooMany = true
        if ($regular[$j] == $i) { $count = $count + 1; }
    }
    if ($count > 6) { $tooMany = 1 }
}
} while ($tooMany == 1); #keep looping until no columns have more than 6 data points


#####Create data for the replacement refs
do{
@replacement;
#add points for lower section 
for ($i = 0; $i < 10; $i++){
    $replacement[$i] = random(170,198,2);
}
#add points for mid section 
@replacement;
for ($i = 10; $i < 20; $i++){
    $replacement[$i] = random(190,218,2);
}
for ($i = 20; $i < 25; $i++){
    $replacement[$i] = random(202,218,2);
}
#add points for upper section 
@replacement;
for ($i = 25; $i < 28; $i++){
    $replacement[$i] = random(228,242,2);
}
$replacementString = "{".join(",", @replacement)."}";

#check if any columns have more than 6 scores (would not not fit inside the plot boundaries drawn)
$tooMany = 0;
for ($i = 165; $i < 219; $i++) { # for each number 165-218
    $count = 0;
    for ($j = 0; $j < 28; $j++) { # count how many times it appears, if count is more than 6, tooMany = true
        if ($replacement[$j] == $i) { $count = $count + 1; }
    }
    if ($count > 6) { $tooMany = 1 }
}
} while ($tooMany == 1); #keep looping until no columns have more than 6 data points


#determine what game duration to use for question:
$minutes = random(180,220,10);

####determine what proportion of the games lasted at least [$minutes] minutes
#for regular refs --
$regularCount = 0.0;
for ($i = 0; $i < 28; $i++){
    if ($regular[$i] >= $minutes) {
        $regularCount = $regularCount + 1.0;
    }
}
#for replacement refs --
$replacementCount = 0.0;
$maxDuration = 0; #also, record the maximum duration for the replacement refs (which is the max overall and mentioned in solution)
for ($i = 0; $i < 28; $i++){
    if ( $replacement[$i] >= $minutes ) { $replacementCount = $replacementCount + 1.0; }
    if ( $replacement[$i] >= $maxDuration ) { $maxDuration = $replacement[$i] }
}

#Calculate the proportions for both groups (to many decimals and to 3 decimals for showing in solution)
$regularProp = $regularCount / 28.0;
$replacementProp = $replacementCount / 28.0;
$solutionRegularProp = floor($regularProp * 1000) / 1000.0;
$solutionReplacementProp = floor($replacementProp * 1000) / 1000.0;

#for question that aks which group of referees had the longest game length (it is always replacement refs)
$popup = PopUp(["?", "regular", "replacement"], "replacement");

#################################################
# How many data points are in the graph.
$numPoints = 20;
# Number of units above the x-axis the image is drawn.
$yOffset = 2.5;
# Height of the box.
$yScale = 1.25;

# Set the bounds of the graph.
$minX = 145;
$minY = -5;
$maxX = 250;
$maxY = 13.5;
#-ENDULETH-#


######################################
# Create  link to applet:
###################################
# You can name your applet (anything reasonable :-) )
# Adjust the height and width as desired
# Paste the geogebra parameters in at the bottom of the page just above the
# command end command so that they don't get in the way.
# See the note down there for more information.
###################################

#-ULETH-#
# Choose an appropriate name for your applet.  Can also leave as ggbfoo.
$appletName = "ggbfoo";
#-ENDULETH-#

$applet =  GeogebraWebApplet(
   code       => "geogebra.GeoGebraApplet",
   archive    => "geogebra.jar",
   codebase                 => findAppletCodebase("geogebra.jar"),
   appletName              => $appletName,
   appletId                    => $appletName,
   submitActionAlias     => 'getAppletValues',  # default actionAlias
   initializeActionAlias   => 'configure',  # default actionAlias
   setStateAlias             => 'setXML',
   getStateAlias             => 'getXML',
   setConfigAlias           => '',
   getConfigAlias           => '',
   returnFieldName       => '',
   #-ULETH-#
   width                 => 900,              # may want to modify width
   height                => 300,              # may want to modify height
   #-ENDULETH-#
   # mayscript             => "true",
   #-ULETH-#
   debugMode             => 0,   # set debugMode to 0 for no debug
                                              # to 1 to make xml representation visible
                                              # to 2 to add alerts detailing progression
                                              # through the applet
   #-ENDULETH-#
   onInit                => 'ggbOnInit',
   type                  => 'geogebraweb',
   #submitActionScript    => qq{ getQE('answerBox').value = getAppletValues() },
   submitActionScript => '',
   selfLoading           => 1,

   # Defined as a separate subroutine so the parameters can go at the bottom of
   # the page.
   params     => GEOGEBRA_PARAMS(),# paste parameters in

);


##################################
# Setup GeogebraWebApplet --
###################################

###############################################
#
#  For persistence of GeoGebra applet state
#  when answers are submitted or page is refreshed.
#  Uses JavaScript interface to GeoGebra.
#  This fetches the GeoGebra applet with $appletname.
#  Note that this variable gets set in the "Create link to applet" section.

HEADER_TEXT(
qq!
<script language="javascript">
   function ggbOnInit(param) {
       if (param == "$appletName") {
           applet_loaded(param,1);  // report that applet is ready.
           ww_applet_list[param].safe_applet_initialize(2);
       }
   }
</script>
<noscript>For this question to work properly,
you must enable JavaScript, or use another browser
(or computer) on which JavaScript works.</noscript>
!);


#######################################################
#
#  For setting initial values in GeoGebra from WeBWorK
#  Uses JavaScript interface to GeoGebra.
#  Note the area right under all the ///////////////.
#  This is where you match up your variables from WeBWorK
#  with your variables in GeoGebra.

TEXT( MODES(TeX=>'', HTML=><<END_SCRIPT ) );
<script language="javascript">
function setAppletCoefficients() {
   var applet=getApplet("$appletName");   // alert("Updating coefficients");
   if (typeof(applet)!="undefined") {
     if (typeof(applet.setValue)!="undefined") {

     ////////////////////////////////////////////////////////////////
     //  List the values of the parameters to be set in the applet here

          // Set variables for GeoGebra from WebWork
          applet.setValue("yOffset", $yOffset); // the number of units above the        x-axis the image is drawn
          applet.setValue("yScale", $yScale); // the height of the box
          // #-ULETH-#
          // Raw data variables get set here.  Do not change values here!
          // You can, however, comment/uncomment lines to match the number of
          // data points you are passing in.
          //applet.setListValue("xList",1,$dataSet[0]);
          //applet.setListValue("xList",2,$dataSet[1]);
          //applet.setListValue("xList",3,$dataSet[2]);
          //applet.setListValue("xList",4,$dataSet[3]);
          //applet.setListValue("xList",5,$dataSet[4]);
          //applet.setListValue("xList",6,$dataSet[5]);
          //applet.setListValue("xList",7,$dataSet[6]);
          //applet.setListValue("xList",8,$dataSet[7]);
          //applet.setListValue("xList",9,$dataSet[8]);
          //applet.setListValue("xList",10,$dataSet[9]);
          //applet.setListValue("xList",11,$dataSet[10]);
          //applet.setListValue("xList",12,$dataSet[11]);
          //applet.setListValue("xList",13,$dataSet[12]);
          //applet.setListValue("xList",14,$dataSet[13]);
          //applet.setListValue("xList",15,$dataSet[14]);
          //applet.setListValue("xList",16,$dataSet[15]);
          //applet.setListValue("xList",17,$dataSet[16]);
          //applet.setListValue("xList",18,$dataSet[17]);
          //applet.setListValue("xList",19,$dataSet[18]);
          //applet.setListValue("xList",20,$dataSet[19]);
          //applet.setListValue("xList",21,$dataSet[20]);
          //applet.setListValue("xList",22,$dataSet[21]);
          //applet.setListValue("xList",23,$dataSet[22]);
          //applet.setListValue("xList",24,$dataSet[23]);
          //applet.setListValue("xList",25,$dataSet[24]);
          //applet.setValue("outliers",1); // To show outliers set to 1, otherwise set this to 0
          // Changing the text value will change the label text on the graph, and
          // the coordinates at the end represent the point on the graph's grid
          // where the label will be placed.
          applet.evalCommand("ZoomIn[$minX,$minY,$maxX,$maxY]");
          // next two commands assign data for replacement and regular refs.
          applet.evalCommand("replacementRefs = DotPlot[$replacementString] + (0, -0.5)");
          applet.evalCommand("regularRefs = DotPlot[$regularString] + (0, 5.5)");
          //
          // #-ENDULETH-#
     } else {
          setTimeout("setAppletCoefficients()", 1000);
     }
   } else {
      setTimeout("setAppletCoefficients()",1000);
   }
}
ww_applet_list["$appletName"].setConfig = function() {setAppletCoefficients()};
</script>
END_SCRIPT


#######################################
# TEXT
#######################################

#-ULETH-#
# Initializes the problem text and answer formatting help.
# If you have LaTeX code you want to display, enter it here in the [``] brackets.
# If you want the previously-defined questions to display in LaTeX, include the
# MathObject in your LaTeX brackets.
Context("LimitedPoint");

BEGIN_PGML

In the 2012 National Football League (NFL) season, the first three weeks' games were played with replacement referees because of
a labor dispute between the NFL and its regular referees. Imagine that the data in the dotplot below represented the duration of games for the first three weeks officiated by replacement referees and the durations for the next three weeks officiated by regular referees.

[@
ColumnTable("",
$BCENTER.
$BBOLD."Football Game Duration by Regular and Replacement Referees".$EBOLD.$PAR.
MODES(HTML=>$applet->insertAll(debug=>0, includeAnswerBox=>0,), TeX=>$im).
"(all games durations are in increments of 2 minutes)".
$ECENTER
,
indent => 0, separation => 30, valign => "MIDDLE"
);
@]*

What _proportion_ of the 28 games officiated by *replacement referees* lasted for at least [$minutes] minutes? (Round your answer to 3 decimal places, ex. 0.923)

Proportion: [______][@AnswerFormatHelp("decimal")@]*

What _proportion_ of the 28 games officiated by *regular referees* lasted for this long? (Round your answer to 3 decimal places, ex. 0.923)

Proportion: [_______][@AnswerFormatHelp("decimal")@]*

The game with the *longest duration* in this dataset was refereed by [@ $popup->menu() @]* referees.

END_PGML



#########################################
# ANSWER section
#########################################

#-ULETH-#
# Setting this to 1 means that students will receive feedback on whether their
# answers are correct.
$showPartialCorrectAnswers = 0;

ANS(Compute($replacementProp)->cmp(tolType=>"absolute", tolerance=>0.001));
ANS(Compute($regularProp)->cmp(tolType=>"absolute", tolerance=>0.001));
ANS($popup->cmp());

#########################################
# The applet as a base64 string
#########################################

sub GEOGEBRA_PARAMS {
    my $result = {
showResetIcon=>"false" ,
enableRightClick=>"false" ,
enableLabelDrags=>"false",
showMenuBar=>"false" ,
showToolBar=>"false",
showAlgebraInput=>"false",
useBrowserForJS=>"true",
#-ULETH-#
# In the GeoGebra desktop application, create your applet.  Once you are done,
# press Ctrl + Shift + B.  This will copy the base64 string (like the one below)
# to your clipboard.  Paste this string between the double quotes below.  Make
# sure not to paste over the }; or $result lines that follow this section.
# You should end up with (e.g. ggbbase64=>"skj8981519+!KJ!MSD!.....") as the
# parameter below.
ggbbase64=>""
#-ENDULETH-#
};

$result;
}

############################
#  Solution

#-ULETH-#
# Solution text to show after the due date.
# If you have LaTeX code you want to display, enter it here in the [``] brackets.
# If you want the previously-defined questions to display in LaTeX, include the
# MathObject in your LaTeX brackets.
BEGIN_PGML_SOLUTION

The graph above shows a dotplot representation of fictional data. The upper portion of the graph depicts durations for 28 games officiated by regular referees and the lower portion shows durations for 28 games officiated by replacement referees. In a dotpot representation, each dot represents a single datum, in this case, a single game. Therefore, we can easily make observations such as determining how many replacement referee games took _at least_ [$minutes] minutes. To determine this count, we simply add-up the dots at or above [$minutes]. There are [$replacementCount] games with replacement referees that took [$minutes] minutes or longer.

We are asked to determine what proportion of regular and replacement referee games had a duration of at least [$minutes] minutes. To determine a proportion, we divide the part by the whole. In this case, to determine what proportion of replacement games had a duration of [$minutes] minutes or longer, we divide the number of games with that range of durations ([$replacementCount] games) by the total number of replacement games (28 games). So the proportion is [$replacementCount] / 28 = [$solutionReplacementProp].

Similarly, for the regular referee games, the proportion of games that lasted at least [$minutes] minutes is [$regularCount] / 28 = [$solutionRegularProp].

The game with the longest duration was a game officiated by replacement referees because the dot with the greatest duration (that is positioned farthest to the right) at [$maxDuration] minutes was officiated by replacement referees.

END_PGML_SOLUTION

COMMENT('GeoGebra question reuqiring students to interpret a dotplot graph with 4 distributions (arranged vertically) and arrange the relative standard deviations using tiles. <BR>
        Distributions are randomly arranged vertically, randomly assigned colors, are randomly assigned from 4 letters, and 3 of the distribtutions are randomly shifted although the shapes of all distributions are retained.
        Graph may not render on editor screen, but renders for students. <BR>
        Includes a solution set.<BR>
        
        Uses PGML. <BR>
Uses GeoGebraWeb (JavaScript), so it should work on computers and tablets.');
#-ENDULETH-#

ENDDOCUMENT();
