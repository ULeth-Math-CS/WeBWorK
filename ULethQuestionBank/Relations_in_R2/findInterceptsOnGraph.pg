## DESCRIPTION
## This question code is based on a sample problem from the WeBWorK wiki.
## It has been modified to meet the ULeth Template standards.
## ENDDESCRIPTION

## DBsubject()
## DBchapter()
## DBsection()
## Date(2017-07-07)
## Institution(University of Lethbridge)
## Authors(Olivia Henders & Nicole Wilson)
## MO(1)
## KEYWORDS('calculus', 'curve sketching', 'graphing')


##############################
#  Initialization

DOCUMENT();

# Contains a comma-separated list of macro filename strings.
# Each file contains functionality necessary for the mathematical
# functions being used in the problem.
loadMacros(
  # REQUIRED: Used for basic question and answer operations.
  "PGstandard.pl",
  # REQUIRED: Used for expression parsing.
  "MathObjects.pl",
  # Used to provide contextual help for how to type answers.
  "AnswerFormatHelp.pl",
  # Needed to support graph generation.
  "PGgraphmacros.pl",
  # Allows the graph and text to be placed in side-by-side columns.
  "unionTables.pl",
  # Provides greater control over the layout of the problem.
  "PGML.pl",
);

# Sets up basic problem information.
TEXT(beginproblem());


#############################
#   Setup

# Refreshes the graph image every time the page is loaded, as opposed to
# retrieving a cached version.
$refreshCachedImages = 1;

# Assumptions for the graph and values:
# 1. The origin is always visible in the graph image and is at (0,0).
# 2. Every integer value on each axis should be labelled.
# 3. The graph is in terms of x & y.
# 4. The desired x & y limits will be within the horizontal
#    and vertical range of the graph, but may not be at the
#    edge of the graph.

#-ULETH-#
# Random values for the function/graph.
$a=non_zero_random(-5,5,1);
$b=$a+non_zero_random(-2,2,1);
# Function to graph.
$fX = "(x-$a)(x-$b)";
# Value of f(0).  Used for the first question.
$f0 = (-$a)*(-$b);
# Used to define the graph's size.
$desiredMinX = min($a,$b);
$desiredMaxX = max($a,$b);
$desiredMinY = 0;
$desiredMaxY = $f0;
# The display size for the graph when the student clicks it to enlarge it.
$graphImageWidth=900;
$graphImageHeight=900;
#-ENDULETH-#

Context("Numeric");

# Set up the min and max values based on the user-provided values.
$minX = $desiredMinX;
$maxX = $desiredMaxX;
$minY = $desiredMinY;
$maxY = $desiredMaxY;
# Swaps the min and max values if they end up in the wrong places.
if ($minX > $maxX)
{
  $hold = $maxX;
  $maxX = $maxX;
  $minX = $hold;
}
if ($minY > $maxY)
{
  $hold = $maxY;
  $maxY = $minY;
  $minY = $hold;
}

# Position of the y-axis.
$originX = 0;
# Position of the x-axis.
$originY = 0;

if ($minX < 0)
{
  $minX = $originX + $minX - 2;
}
else
{
  $minX = $originX - $minX - 2;
}

if ($maxX < 0)
{
  $maxX = $originX - $maxX + 2;
}
else
{
  $maxX = $originX + $maxX + 2;
}

if ($minY < 0)
{
  $minY = $originY + $minY - 2;
}
else
{
  $minY = $originY - $minY - 2;
}

if ($maxY < 0)
{
  $maxY = $originY - $maxY + 2;
}
else
{
  $maxY = $originY + $maxY + 2;
}

$gridHoriz = $maxX-$minX;
$gridVert = $maxY-$minY;

# init_graph arguments: minX, minY, maxX, maxY, origin, gridSize, graphSize
$gr = init_graph($minX,$minY,$maxX,$maxY,axes=>[$originX,$originY],grid=>[$gridHoriz,$gridVert]);
# Resets all the graph labels.
$gr -> lb('reset');

#-ULETH-#
#  Graph labels and functions
#
# Label arguments: xPosition, yPosition, labelText, colour, xJustification, yJustification
$gr -> lb(new Label ( $maxX-0.5,$originY+0.15,'x','black','left','bottom'));
$gr -> lb(new Label ( $originX+0.15,$maxY-1.5,'y','black','left','bottom'));
$gr -> lb(new Label ( $a,0.25,'y = f(x)','black','left','bottom'));

# Initializes the x-axis positive and negative number labels.
for(my $i = $minX; $i < $maxX; $i++) {
  if ($i != 0)
  {
    $gr -> lb(new Label ( $i,$originY-0.25, "$i",'black','center','middle'));
  }
}
# foreach my $i (1..-$minX-1) {
#   $gr -> lb(new Label (-$i,$originY-0.25,-$i,'black','center','middle'));
# }

# Initializes the y-axis positive and negative number labels.
for(my $i = $minY; $i < $maxY; $i++) {
  if ($i != 0)
  {
    $gr -> lb(new Label ($originX-0.25,$i,"$i",'black','center','middle'));
  }
}
# foreach my $i (1..-$minY-1) {
# }

#Insert a graph of \(f(x) = \frac{x-$a}{$bx+$c}\).

# Adds the function to the graph using x values between -5 and 5.
# The line is drawn in orange with a weight of 4.
$gr->new_color("orange", 230,159,0);
add_functions($gr, "($fX) for x in <$minX,$maxX> using color: orange and weight:2");
#############################
#  Main Text

# Places the following information in column1 (the leftmost) of the layout table.
# Also sets up number formatting help for the answer boxes.
$column1 = PGML::Format(<<END_PGML);
Use the graph to find the missing values.
There may be more than one correct answer,
in which case you should enter your answers
as a comma separated list.  If there are no
correct answers, enter _DNE._

a. [` f(0) = `] [________] [@ AnswerFormatHelp("numbers") @]*

b. If [` f(x) = 0 `] then [`x=`][______]. [@ AnswerFormatHelp("numbers") @]*
END_PGML

# Places the graph image in column2 (the rightmost) of the layout table.
# The additional arguments after insertGraph($gr) specify the width and height
# of the image when it's on-screen, while the tex_size is a percentage multiplier
# determining what size the image will print at in a hard copy version.
$column2 = image(insertGraph($gr), width=>$graphImageWidth, height=>$graphImageHeight, tex_size=>700).
$BR.$BCENTER.$BR."Graph of \( y = f(x) \)".$ECENTER;
#-ENDULETH-#

TEXT(ColumnTable($column1, $column2, indent => 0, separation => 30, valign => "TOP"));

#############################
#  Answer Evaluation

#-ULETH-#
# Setting this to 1 means that students will receive feedback on whether their
# answers are correct.
$showPartialCorrectAnswers = 1;

ANS(List($f0)->cmp());
ANS(List($a,$b)->cmp());
#-ENDULETH-#


#############################
#   Solution

#-ULETH-#
# Can be used to show the student the solution to the problem.

# Similar to BEGIN_PGML, marks the start of the solution text.
BEGIN_PGML_SOLUTION
a. [`f(0)`] is the [`y`]-value where the curve crosses the [`y`]-axis; it is
also called the [`y`]-intercept.

b. [`f(x) = 0`] are the [`x`]-values where the curve crosses the [`x`]-axis;
they are also called the [`x`]-intercepts.

Jointly, these values are called the intercepts.
END_PGML_SOLUTION
#-ENDULETH-#

# Marks the end of the problem document.
ENDDOCUMENT();
