## DESCRIPTION
## This question code is based on a sample problem from the WeBWorK wiki.
## It has been modified to meet the ULeth Template standards.
## ENDDESCRIPTION

## DBsubject()
## DBchapter()
## DBsection()
## Date(2017-07-04)
## Institution(University of Lethbridge)
## Author(Olivia Henders & Nicole Wilson)
## MO(1)
## KEYWORDS('formula roots', 'equivalence in x')

# How to add a new question:
# Step 1. If you want to change the pool of values to select the integer
#   values from, change the range for the random number selectors.
# Step 2. If you want to use variables other than x and y in your question,
#   add them here.
# Step 3. Compute the roots that are the solution to the question.
# Step 4. Add the text for the new question to the main text of the problem.
#   Also add an answer blank for the student to fill in their answer.
#   If necessary, also add the AnswerFormatHelp after the blank so that
#   students can get some help with inputting their answer.
#   If you have LaTeX code you want to display, enter it in the [``] brackets.
#   If you want previously-defined values to display in LaTeX, include the
#   MathObject name in your LaTeX brackets, enclosed in square brackets.
# Step 5. Add an answer checker for the new question.  This is a special
#   multi-answer checker, so it is recommended that you don't modify it, save
#   for substituting in the values for your question.
# Step 6. Add solution text for the question, assuming that you have some special
#   solution text you want students to be able to see after the assignment due date.
#   If you have LaTeX code you want to display, enter it in the [``] brackets.
#   If you want previously-defined values to display in LaTeX, include the
#   MathObject name in your LaTeX brackets, enclosed in square brackets.


#############################
#  Initialization

DOCUMENT();

loadMacros(
  "PGstandard.pl",
  "MathObjects.pl",
  # Used to provide contextual help for how to type answers.
  "AnswerFormatHelp.pl",
  # Provides greater control over the layout of the problem.
  "PGML.pl",
  # Used for course-specific initializations.
  "PGcourse.pl",
);

TEXT(beginproblem());


#############################
#  Setup

Context("Numeric");

#-ULETH-#
$root1 = random(1,4,1);
$root2 = non_zero_random(-2,2,1);
# The solution value for the problem.  The quadratic equation is computed based
# on the randomly-generated roots.
$aSolution = Compute("(x+$root1)(x+$root2)")->reduce;

$root3 = random(5,10,1);
$root4 = non_zero_random(-10,10,1);

Context()->variables->add(p=>"Real");
$bSolution = Compute("(p+$root3)(p+$root4)")->reduce;

# Step 1. If you want to change the pool of values to select the integer
#   values from, change the range for the random number selectors.
# Eg: $root5 = random(5,10,1);
# $root6 = non_zero_random(-10,10,1);

# Step 2. If you want to use variables other than x and y in your question,
#   add them here.
# Eg: Context()->variables->add(r=>"Real");

# Step 3. Compute the roots that are the solution to the question.
# Eg: $cSolution = Compute("(r+$root5)(r+$root6)")->reduce;
#-ENDULETH-#


#############################
#  Main text

#-ULETH-#
# Initializes the problem text and answer formatting help.
# Step 4. Add the text for the new question to the main text of the problem.
#   Also add an answer blank for the student to fill in their answer.
#   If necessary, also add the AnswerFormatHelp after the blank so that
#   students can get some help with inputting their answer.
#   If you have LaTeX code you want to display, enter it in the [``] brackets.
#   If you want previously-defined values to display in LaTeX, include the
#   MathObject name in your LaTeX brackets, enclosed in square brackets.
# Eg: c.  Find a quadratic equation in terms of the variable
# [` r `] with roots [` -[$root6] `] and [` -[$root5] `].
#
#     [` s = `] [______________] [@ AnswerFormatHelp("formulas") @]*
BEGIN_PGML
a.  Find a quadratic equation in terms of the variable
[` x `] with roots [` -[$root2] `] and [` -[$root1] `].

    [` y = `] [______________] [@ AnswerFormatHelp("formulas") @]*

b.  Find a quadratic equation in terms of the variable
[` p `] with roots [` -[$root4] `] and [` -[$root3] `].

    [` q = `] [______________] [@ AnswerFormatHelp("formulas") @]*
END_PGML
#-ENDULETH-#

#############################
#  Answer evaluation

#-ULETH-#
# Setting this to 1 means that students will receive feedback on whether their
# answers are correct.
$showPartialCorrectAnswers = 1;

# If you add additional questions, make sure you add answer checkers for them here!
#-ENDULETH-#

# This is an adaptive parameter for the solution.
# In effect, it copies the context and checks that the formula the student
# provides produces the desired roots.
ANS( $aSolution->cmp(checker => sub {
      my ( $correct, $student, $self ) = @_;
      # Creates a local version of the Context.
      my $context = Context()->copy;
      # Automatically marks incorrect if the student answer equals 0.
      return 0 if $student == 0;
      $context->flags->set(no_parameters=>0);
      $context->variables->add('C0'=>'Parameter');
      my $c0 = Formula($context,'C0');
      # Redefines the student answer and correct answer in the local Context.
      $student = Formula($context,$student);
      $correct = Formula($context,"$c0 * $aSolution");
      # Returns true if the student answer is correct, and false if they're not.
      return $correct == $student;
    }
) );

ANS( $bSolution->cmp(checker => sub {
          my ( $correct, $student, $self ) = @_;
          # Creates a local version of the Context.
          my $context = Context()->copy;
          # Automatically marks incorrect if the student answer equals 0.
          return 0 if $student == 0;
          $context->flags->set(no_parameters=>0);
          $context->variables->add('C0'=>'Parameter');
          my $c0 = Formula($context,'C0');
          # Redefines the student answer and correct answer in the local Context.
          $student = Formula($context,$student);
          $correct = Formula($context,"$c0 * $bSolution");
          # Returns true if the student answer is correct, and false if they're not.
          return $correct == $student;
        }
    ) );

# Step 5. Add an answer checker for the new question.  This is a special
#   multi-answer checker, so it is recommended that you don't modify it, save
#   for substituting in the values for your question.
# Eg: ANS( $cSolution->cmp(checker => sub {
#           my ( $correct, $student, $self ) = @_;
#           # Creates a local version of the Context.
#           my $context = Context()->copy;
#           # Automatically marks incorrect if the student answer equals 0.
#           return 0 if $student == 0;
#           $context->flags->set(no_parameters=>0);
#           $context->variables->add('C0'=>'Parameter');
#           my $c0 = Formula($context,'C0');
#           # Redefines the student answer and correct answer in the local Context.
#           $student = Formula($context,$student);
#           $correct = Formula($context,"$c0 * $cSolution");
#           # Returns true if the student answer is correct, and false if they're not.
#           return $correct == $student;
#         }
#     ) );



#############################
#  Solution

#-ULETH-#
# Solution text to show after the due date.
# Step 6. Add solution text for the question, assuming that you have some special
#   solution text you want students to be able to see after the assignment due date.
#   If you have LaTeX code you want to display, enter it in the [``] brackets.
#   If you want previously-defined values to display in LaTeX, include the
#   MathObject name in your LaTeX brackets, enclosed in square brackets.
BEGIN_PGML_SOLUTION
a.  To find the formula for [`y`], recall that each root corresponds to a factor of y.

    So when [`y=0`], we know [`x = -[$root1]`] or [`x = -[$root2]`]

    so [`x + [$root1] = 0`] or [`x + [$root2] = 0`].

    Hence, [`y = c(x + [$root1])(x + [$root2])`] for any non-zero real constant [`c`].

    To answer the question we pick any non-zero real constant for [`c`].

    Thus  [`y = (x + [$root1])(x + [$root2])`] ,
    [`y = -7(x + [$root1])(x + [$root2])`],
    and  [`y = \frac{11}{5}(x + [$root1])(x + [$root2])`]
    are three of the infinite correct answers.

b.  To find the formula for [`q`], recall that each root corresponds to a factor of q.

    So when [`q=0`], we know [`p = -[$root3]`] or [`p = -[$root4]`]

    so [`p + [$root3] = 0`] or [`p + [$root4] = 0`].

    Hence, [`q = c(p + [$root3])(p + [$root4])`] for any non-zero real constant [`c`].

    To answer the question we pick any non-zero real constant for [`c`].

    Thus  [`q = (p + [$root3])(p + [$root4])`] ,
    [`q = -7(p + [$root3])(p + [$root4])`],
    and  [`q = \frac{11}{5}(p + [$root3])(p + [$root4])`]
    are three of the infinite correct answers.
END_PGML_SOLUTION

COMMENT('MathObject version. Uses PGML.');
#-ENDULETH-#

ENDDOCUMENT();
