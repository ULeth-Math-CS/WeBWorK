## DESCRIPTION
## This is Problem 1.4.12 from the APEX Calculus text. It covers graphical evaluation of left and right-hand limits. 
## ENDDESCRIPTION

## DBsubject(Calculus - single variable)
## DBchapter(Limits and continuity)
## DBsection(One-sided limits - concept of)
## Level(2)
## Institution('Valdosta State University')
## Author('S. V. Ault')
## RevisedBy('F. J. Francis')
## TitleText1('APEX Calculus')
## AuthorText1('Hartman')
## EditionText1('3.0')
## Section1('1.4')
## Problem1('12')
## MO(1)
## Keywords('limit', 'limits', 'left,right,one-sided', 'piecewise function', 'ULETH-MATH1560', 'ULETH-MATH1565')

##############################
#  Initialization

DOCUMENT();

# Contains a comma-separated list of macro filename strings.
# Each file contains functionality necessary for the mathematical
# functions being used in the problem.
loadMacros(
  # REQUIRED: Used for basic question and answer operations.
  "PGstandard.pl",
  # REQUIRED: Used for expression parsing.
  "MathObjects.pl",
  # Used to provide contextual help for how to type answers.
  "AnswerFormatHelp.pl",
  # Needed to support graph generation.
  "PGgraphmacros.pl",
  # Allows the graph and text to be placed in side-by-side columns.
  "unionTables.pl",
  # Provides greater control over the layout of the problem.
  "PGML.pl",
  "parserRadioButtons.pl"
);

# Sets up basic problem information.
TEXT(beginproblem());


#############################
#   Setup

# Refreshes the graph image every time the page is loaded, as opposed to
# retrieving a cached version.
$refreshCachedImages = 1;

# Assumptions for the graph and values:
# 1. The origin is always visible in the graph image and is at (0,0).
# 2. Every integer value on each axis should be labelled.
# 3. The graph is in terms of x & y.
# 4. The desired x & y limits will be within the horizontal
#    and vertical range of the graph, but may not be at the
#    edge of the graph.

#-ULETH-#
# Random values for the function/graph.
$a = random(1,3,1);
# Functions to graph.
$p1 = Compute("-4"); 
$p2 = Compute("-3"); 
$p3 = Compute("-2"); 
$p4 = Compute("-1"); 
$p5 = Compute("0"); 
$p6 = Compute("1"); 
$p7 = Compute("2"); 
$p8 = Compute("3"); 
# Used to define the graph's size.
$desiredMinX = -4;
$desiredMaxX = 4;
$desiredMinY =-4;
$desiredMaxY = 4;
# The display size for the graph when the student clicks it to enlarge it.
$graphImageWidth=400;
$graphImageHeight=400;
#-ENDULETH-#

Context("Numeric")->variables->add(a => 'Real');

# Set up the min and max values based on the user-provided values.
$minX = $desiredMinX;
$maxX = $desiredMaxX;
$minY = $desiredMinY;
$maxY = $desiredMaxY;
# Swaps the min and max values if they end up in the wrong places.
if ($minX > $maxX)
{
  $hold = $maxX;
  $maxX = $maxX;
  $minX = $hold;
}
if ($minY > $maxY)
{
  $hold = $maxY;
  $maxY = $minY;
  $minY = $hold;
}

# Position of the y-axis.
$originX = 0;
# Position of the x-axis.
$originY = 0;

if ($minX < 0)
{
  $minX = $originX + $minX - 2;
}
else
{
  $minX = $originX - $minX - 2;
}

if ($maxX < 0)
{
  $maxX = $originX - $maxX + 2;
}
else
{
  $maxX = $originX + $maxX + 2;
}

if ($minY < 0)
{
  $minY = $originY + $minY - 2;
}
else
{
  $minY = $originY - $minY - 2;
}

if ($maxY < 0)
{
  $maxY = $originY - $maxY + 2;
}
else
{
  $maxY = $originY + $maxY + 2;
}

$gridHoriz = $maxX-$minX;
$gridVert = $maxY-$minY;

# init_graph arguments: minX, minY, maxX, maxY, origin, gridSize, graphSize
$gr = init_graph($minX,$minY,$maxX,$maxY,axes=>[$originX,$originY],grid=>[$gridHoriz,$gridVert]);
# Resets all the graph labels.
$gr -> lb('reset');

#-ULETH-#
#  Graph labels and functions
#
# Label arguments: xPosition, yPosition, labelText, colour, xJustification, yJustification
$gr -> lb(new Label ( $maxX-0.5,$originY+0.15,'x','black','left','bottom'));
$gr -> lb(new Label ( $originX+0.15,$maxY-1.5,'y','black','left','bottom'));
#$gr -> lb(new Label ( $a,0.25,'y = f(x)','black','left','bottom'));

# Initializes the x-axis positive and negative number labels.
for(my $i = $minX; $i < $maxX; $i++) {
  if ($i != 0)
  {
    $gr -> lb(new Label ( $i,$originY-0.25, "$i",'black','center','middle'));
  }
}
# foreach my $i (1..-$minX-1) {
#   $gr -> lb(new Label (-$i,$originY-0.25,-$i,'black','center','middle'));
# }

# Initializes the y-axis positive and negative number labels.
for(my $i = $minY; $i < $maxY; $i++) {
  if ($i != 0)
  {
    $gr -> lb(new Label ($originX-0.25,$i,"$i",'black','center','middle'));
  }
}

#Insert a graph of the listed functions (up to 4).
#-ULETH-#
# The line is drawn in orange with a weight of 2.
# If you want to change the colour, change the RGB code following the colour name.
# If you change the name of the colour, you will have to also change it in the
# add_functions line below.
$gr->new_color("orange", 255,153,51);

# Adds the function to the graph using x values between $minX and $maxX.
add_functions($gr, "$p1 for x in [-4,-3) using color:orange weight:2");
add_functions($gr, "$p2 for x in [-3,-2) using color:orange weight:2");
add_functions($gr, "$p3 for x in [-2,-1) using color:orange weight:2");
add_functions($gr, "$p4 for x in [-1,0) using color:orange weight:2");
add_functions($gr, "$p5 for x in [0,1) using color:orange weight:2");
add_functions($gr, "$p6 for x in [1,2) using color:orange weight:2");
add_functions($gr, "$p7 for x in [2,3) using color:orange weight:2");
add_functions($gr, "$p8 for x in [3,4) using color:orange weight:2");

#-ENDULETH-#

$ans1 = Compute("$a-1");
$ans2 = Compute("$a");
$ans3 = Compute("DNE");
$ans4 = Compute("-$a-1");
$ans5 = Compute("-$a");
$ans6 = Compute("DNE");
$ans7 = Compute("a - 1");
$ans8 = Compute("a");
$ans9 = Compute("DNE");


#############################
#  Main Text

#-ULETH-#
# Places the following information in column1 (the leftmost) of the layout table.
# If you have LaTeX code you want to display, enter it here in the [``] brackets.
# If you want the previously-defined questions to display in LaTeX, include the
# MathObject in your LaTeX brackets.
$column1 = PGML::Format2(<<'END_PGML');
Evaluate each expression using the given graph of [`g(x)`].

a) [`\displaystyle \lim_{x \to [$a]^{-}}g(x) = `] [___________] [@ AnswerFormatHelp("numbers") @]*
b) [`\displaystyle \lim_{x \to [$a]^{+}}g(x) = `] [___________] 
c) [`\displaystyle \lim_{x \to [$a]}g(x) = `] [___________] 
d) [`\displaystyle \lim_{x \to -[$a]^{-}}g(x) = `] [___________] 
e) [`\displaystyle \lim_{x \to -[$a]^{+}}g(x) = `] [___________] 
f) [`\displaystyle \lim_{x \to -[$a]}g(x) = `] [___________] 

In the remaining problems, assume [`a`] is an *integer* such that [`-3 \leq a \leq 3`].

a) [`\displaystyle \lim_{x \to a^{-}}g(x) = `] [___________] [@ AnswerFormatHelp("formulas") @]*
b) [`\displaystyle \lim_{x \to a^{+}}g(x) = `] [___________] 
c) [`\displaystyle \lim_{x \to a}g(x) = `] [___________] 

Each answer should either be a formula involving [`a`] that works for each integer value, or DNE if the limit does not exist.
END_PGML

# Places the graph image in column2 (the rightmost) of the layout table.
# The additional arguments after insertGraph($gr) specify the width and height
# of the image when it's on-screen, while the tex_size is a percentage multiplier
# determining what size the image will print at in a hard copy version.
$column2 = image(insertGraph($gr), width=>$graphImageWidth, height=>$graphImageHeight, tex_size=>600).
$BR.$BCENTER.$BR."Graph of \( y = g(x) \)".$ECENTER;
#-ENDULETH-#

TEXT(ColumnTable($column1, $column2, indent => 0, separation => 30, valign => "TOP"));


#############################
#  Answer Evaluation

#-ULETH-#
# Setting this to 1 means that students will receive feedback on whether their
# answers are correct.
$showPartialCorrectAnswers = 1;

# If you add additional questions, make sure you add answer checkers for them here!
ANS( Compute($ans1)->cmp );
ANS( Compute($ans2)->cmp );
ANS( Compute($ans3)->cmp );
ANS( Compute($ans4)->cmp );
ANS( Compute($ans5)->cmp );
ANS( Compute($ans6)->cmp );
ANS( $ans7->cmp );
ANS( $ans8->cmp );
ANS( Compute($ans9)->cmp );

#-ENDULETH-#


#############################
#   Solution

#-ULETH-#
# Solution text to show after the due date.
# If you have LaTeX code you want to display, enter it here in the [``] brackets.
# If you want the previously-defined questions to display in LaTeX, include the
# MathObject in your LaTeX brackets.
BEGIN_PGML_SOLUTION
As we approach 2 from the left, we see that [`g(x)`] approaches [`[$ans1]`]. Hence [`\displaystyle \lim_{x \to 2^{-}} g(x) = [$ans1]`]. As we approach 2 from the right, we see that [`g(x)`] approaches [`[$ans2]`]. Hence [`\displaystyle \lim_{x \to 2^{-}} g(x) = [$ans2]`]. The left and right-hand limits are not the same, so [`\displaystyle \lim_{x \to 2^{-}} g(x)`] does not exist. The same is true for the limit at 0. Finally, the graph shows that the function [`g(x)`] is defined at 2 to be [`[$ans5]`].

END_PGML_SOLUTION

COMMENT('
    Randomization provides 3 possible versions of this question.<BR>
    Includes a solution set.<BR>
    Made from a ULETH template.<BR>
    ');
#-ENDULETH-#

# Marks the end of the problem document.
ENDDOCUMENT();
