## DESCRIPTION
## This is Problem 3.1.6 from the APEX Calculus text (3.1.7 in the ULETH APEX text). It covers graphical identification of extrema. 
## ENDDESCRIPTION

## DBsubject(Calculus - single variable)
## DBchapter(Applications of differentiation)
## DBsection(Global extrema)
## Level(2)
## Institution('Valdosta State University')
## Author('S. V. Ault')
## RevisedBy('F. J. Francis')
## TitleText1('APEX Calculus')
## AuthorText1('Hartman')
## EditionText1('3.0')
## Section1('3.1')
## Problem1('6')
## MO(1)
## Keywords('extrema', 'absolute maximum minimum', 'ULETH-MATH1560', 'ULETH-MATH1565')

##############################
#  Initialization

DOCUMENT();

# Contains a comma-separated list of macro filename strings.
# Each file contains functionality necessary for the mathematical
# functions being used in the problem.
loadMacros(
  # REQUIRED: Used for basic question and answer operations.
  "PGstandard.pl",
  "PGchoicemacros.pl",
  "PGanswermacros.pl",
  # REQUIRED: Used for expression parsing.
  "MathObjects.pl",
  # Used to provide contextual help for how to type answers.
  "AnswerFormatHelp.pl",
  # Needed to support graph generation.
  "PGgraphmacros.pl",
  # Allows the graph and text to be placed in side-by-side columns.
  "unionTables.pl",
  "niceTables.pl",
  # Provides greater control over the layout of the problem.
  "PGML.pl",
  "parserRadioButtons.pl"
);

# Sets up basic problem information.
TEXT(beginproblem());


#############################
#   Setup

# Refreshes the graph image every time the page is loaded, as opposed to
# retrieving a cached version.
$refreshCachedImages = 1;

# Assumptions for the graph and values:
# 1. The origin is always visible in the graph image and is at (0,0).
# 2. Every integer value on each axis should be labelled.
# 3. The graph is in terms of x & y.
# 4. The desired x & y limits will be within the horizontal
#    and vertical range of the graph, but may not be at the
#    edge of the graph.

#-ULETH-#
# Random values for the function/graph.

# Functions to graph.
$f1 = Compute(".9375(5x -  x^2/2) - 7.21875"); 
$f2 = Compute("2.625 + sqrt((x - 7)/2)"); 
$f3 = Compute("1.625 - 2*sin(pi/2*(x - 10))"); 

# Used to define the graph's size.
$desiredMinX = 1;
$desiredMaxX = 13;
$desiredMinY = -3;
$desiredMaxY = 4;
# The display size for the graph when the student clicks it to enlarge it.
$graphImageWidth=400;
$graphImageHeight=400;
#-ENDULETH-#

Context("Numeric");

# Set up the min and max values based on the user-provided values.
$minX = $desiredMinX;
$maxX = $desiredMaxX;
$minY = $desiredMinY;
$maxY = $desiredMaxY;
# Swaps the min and max values if they end up in the wrong places.
if ($minX > $maxX)
{
  $hold = $maxX;
  $maxX = $maxX;
  $minX = $hold;
}
if ($minY > $maxY)
{
  $hold = $maxY;
  $maxY = $minY;
  $minY = $hold;
}

# Position of the y-axis.
$originX = 0;
# Position of the x-axis.
$originY = 0;

if ($minX < 0)
{
  $minX = $originX + $minX - 2;
}
else
{
  $minX = $originX - $minX - 2;
}

if ($maxX < 0)
{
  $maxX = $originX - $maxX + 2;
}
else
{
  $maxX = $originX + $maxX + 2;
}

if ($minY < 0)
{
  $minY = $originY + $minY - 2;
}
else
{
  $minY = $originY - $minY - 2;
}

if ($maxY < 0)
{
  $maxY = $originY - $maxY + 2;
}
else
{
  $maxY = $originY + $maxY + 2;
}

$gridHoriz = $maxX-$minX;
$gridVert = $maxY-$minY;

# init_graph arguments: minX, minY, maxX, maxY, origin, gridSize, graphSize
$gr = init_graph($minX,$minY,$maxX,$maxY,axes=>[$originX,$originY],grid=>[$gridHoriz,$gridVert]);
# Resets all the graph labels.
$gr -> lb('reset');

#-ULETH-#
#  Graph labels and functions
#
# Label arguments: xPosition, yPosition, labelText, colour, xJustification, yJustification
$gr -> lb(new Label ( $maxX-0.5,$originY+0.15,'x','black','left','bottom'));
$gr -> lb(new Label ( $originX+0.15,$maxY-1.5,'y','black','left','bottom'));
#$gr -> lb(new Label ( $a,0.25,'y = f(x)','black','left','bottom'));

# Initializes the x-axis positive and negative number labels.
for(my $i = $minX; $i < $maxX; $i++) {
  if ($i != 0)
  {
    $gr -> lb(new Label ( $i,$originY-0.25, "$i",'black','center','middle'));
  }
}
# foreach my $i (1..-$minX-1) {
#   $gr -> lb(new Label (-$i,$originY-0.25,-$i,'black','center','middle'));
# }

# Initializes the y-axis positive and negative number labels.
for(my $i = $minY; $i < $maxY; $i++) {
  if ($i != 0)
  {
    $gr -> lb(new Label ($originX-0.25,$i,"$i",'black','center','middle'));
  }
}

#Insert a graph of the listed functions (up to 4).
#-ULETH-#
# The line is drawn in orange with a weight of 2.
# If you want to change the colour, change the RGB code following the colour name.
# If you change the name of the colour, you will have to also change it in the
# add_functions line below.
$gr->new_color("orange", 255,153,0);
$gr->new_color("bl", 102, 153, 204); 
# Adds the function to the graph using x values between $minX and $maxX.
add_functions($gr, "$f1 for x in (1,5] using color:orange weight:2");
add_functions($gr, "$f1 for x in [5,7] using color:orange weight:2");
add_functions($gr, "$f2 for x in [7,9) using color:orange weight:2");
add_functions($gr, "$f3 for x in (9,10] using color:orange weight:2");
add_functions($gr, "$f3 for x in [10,11] using color:orange weight:2");
add_functions($gr, "$f3 for x in [11,13] using color:orange weight:2");

# Add labels to the relevant points on the graph

$gr->lb( new Label(1,-3.3,'A',
    'black','center','middle'));
$gr->lb( new Label(5,4.2,'B',
    'black','center','middle'));
$gr->lb( new Label(7,2.4,'C',
    'black','center','middle'));
$gr->lb( new Label(9,3.4,'D',
    'black','center','middle'));
$gr->lb( new Label(9.7,1.625,'E',
    'black','center','middle'));
$gr->lb( new Label(11,-0.67,'F',
    'black','center','middle'));
$gr->lb( new Label(13,3.9,'G',
    'black','center','middle'));


# Set up the Multiple Choice answers

$mc1 = new_checkbox_multiple_choice();
$mc1 -> qa (
"\(A\).",
"None of the above"
);
$mc1 -> makeLast("Absolute maximum", "Absolute minimum", "Relative maximum", "Relative minimum","None of the above");

$mc2 = new_checkbox_multiple_choice();
$mc2 -> qa (
"\(B\).",
"Absolute maximum",
"Relative maximum",
);
$mc2 -> makeLast("Absolute maximum", "Absolute minimum", "Relative maximum", "Relative minimum","None of the above");

$mc3 = new_checkbox_multiple_choice();
$mc3 -> qa (
"\(C\).",
"Relative minimum"
);
$mc3 -> makeLast("Absolute maximum", "Absolute minimum", "Relative maximum", "Relative minimum","None of the above");


$mc4 = new_checkbox_multiple_choice();
$mc4 -> qa (
"\(D\).",
"None of the above"
);
$mc4 -> makeLast("Absolute maximum", "Absolute minimum", "Relative maximum", "Relative minimum","None of the above");

$mc5 = new_checkbox_multiple_choice();
$mc5 -> qa (
"\(E\).",
"None of the above"
);
$mc5 -> makeLast("Absolute maximum", "Absolute minimum", "Relative maximum", "Relative minimum","None of the above");

$mc6 = new_checkbox_multiple_choice();
$mc6 -> qa (
"\(F\).",
"Relative minimum"
);
$mc6 -> makeLast("Absolute maximum", "Absolute minimum", "Relative maximum", "Relative minimum","None of the above");

$mc7 = new_checkbox_multiple_choice();
$mc7 -> qa (
"\(G\).",
"Relative maximum"
);
$mc7 -> makeLast("Absolute maximum", "Absolute minimum", "Relative maximum", "Relative minimum","None of the above");

#-ENDULETH-#


#############################
#  Main Text

#-ULETH-#

$columnA = PGML::Format2(<<'END_PGML');

[@ $mc1->print_q() @]* [@ $mc1->print_a() @]*

[@ $mc2->print_q() @]* [@ $mc2->print_a() @]*

[@ $mc3->print_q() @]* [@ $mc3->print_a() @]*

[@ $mc4->print_q() @]* [@ $mc4->print_a() @]*
END_PGML

$columnB = PGML::Format2(<<'END_PGML');

[@ $mc5->print_q() @]* [@ $mc5->print_a() @]*

[@ $mc6->print_q() @]* [@ $mc6->print_a() @]*

[@ $mc7->print_q() @]* [@ $mc7->print_a() @]*

END_PGML

# Places the graph image in column2 (the rightmost) of the layout table.
# The additional arguments after insertGraph($gr) specify the width and height
# of the image when it's on-screen, while the tex_size is a percentage multiplier
# determining what size the image will print at in a hard copy version.
$column1 = image(insertGraph($gr), width=>$graphImageWidth, height=>$graphImageHeight, tex_size=>600).
$BR.$BCENTER.$BR."".$ECENTER;
#-ENDULETH-#
$column2 = ColumnTable($columnA, $columnB, indent => 0, separation => 30, valign => "TOP");

BEGIN_PGML

Identify the marked points as being an absolute maximum or
minimum, a relative maximum or minimum, or none of the above.  (Select
all that apply.)

END_PGML

TEXT(ColumnTable($column1, $column2, indent => 0, separation => 30, valign => "TOP"));


#############################
#  Answer Evaluation

#-ULETH-#
# Setting this to 1 means that students will receive feedback on whether their
# answers are correct.
$showPartialCorrectAnswers = 0;

ANS( checkbox_cmp( $mc1->correct_ans() ) );
ANS( checkbox_cmp( $mc2->correct_ans() ) );
ANS( checkbox_cmp( $mc3->correct_ans() ) );
ANS( checkbox_cmp( $mc4->correct_ans() ) );
ANS( checkbox_cmp( $mc5->correct_ans() ) );
ANS( checkbox_cmp( $mc6->correct_ans() ) );
ANS( checkbox_cmp( $mc7->correct_ans() ) );

# If you add additional questions, make sure you add answer checkers for them here!

#-ENDULETH-#


#############################
#   Solution

#-ULETH-#
# Solution text to show after the due date.
# If you have LaTeX code you want to display, enter it here in the [``] brackets.
# If you want the previously-defined questions to display in LaTeX, include the
# MathObject in your LaTeX brackets.
BEGIN_PGML_SOLUTION

Since the points labeled [`A`] and [`D`] are not actually 
part of the graph, they cannot
be classified as absolute or relative extrema.

Point [`B`] is both a relative and absolute maximum.

Points [`C`] and [`F`] are relative minima (but not absolute).

Point [`E`] is neither a maximum nor minimum.

Point [`G`] is a relative maximum (but not absolute).


END_PGML_SOLUTION

COMMENT('
    There is only one version of this question.
    Includes a solution set.<BR>
    Made from a ULETH template.<BR>
    ');
#-ENDULETH-#

# Marks the end of the problem document.
ENDDOCUMENT();
